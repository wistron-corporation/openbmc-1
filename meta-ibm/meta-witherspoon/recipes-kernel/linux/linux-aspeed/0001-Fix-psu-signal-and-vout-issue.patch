From 5e8a59a82fa905acdaf641d777d1ae264d511fe0 Mon Sep 17 00:00:00 2001
From: AndyYFWang <Andy_YF_Wang@wistron.com>
Date: Thu, 26 Nov 2020 17:05:40 +0800
Subject: [PATCH] Fix psu signal and vout issue

---
 drivers/hwmon/pmbus/ibm-cffps.c  |  3 +--
 drivers/hwmon/pmbus/pmbus_core.c | 12 +++++++-----
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/hwmon/pmbus/ibm-cffps.c b/drivers/hwmon/pmbus/ibm-cffps.c
index 7cf4cc5..844531e 100644
--- a/drivers/hwmon/pmbus/ibm-cffps.c
+++ b/drivers/hwmon/pmbus/ibm-cffps.c
@@ -444,8 +444,7 @@ static struct pmbus_driver_info ibm_cffps_info[] = {
 	[cffps1] = {
 		.pages = 1,
 		.func[0] = PMBUS_HAVE_VIN | PMBUS_HAVE_VOUT | PMBUS_HAVE_IOUT |
-			PMBUS_HAVE_PIN | PMBUS_HAVE_FAN12 | PMBUS_HAVE_TEMP |
-			PMBUS_HAVE_TEMP2 | PMBUS_HAVE_TEMP3 |
+			PMBUS_HAVE_PIN | PMBUS_HAVE_FAN12 |
 			PMBUS_HAVE_STATUS_VOUT | PMBUS_HAVE_STATUS_IOUT |
 			PMBUS_HAVE_STATUS_INPUT | PMBUS_HAVE_STATUS_TEMP |
 			PMBUS_HAVE_STATUS_FAN12,
diff --git a/drivers/hwmon/pmbus/pmbus_core.c b/drivers/hwmon/pmbus/pmbus_core.c
index f7fc388..e9646c8 100644
--- a/drivers/hwmon/pmbus/pmbus_core.c
+++ b/drivers/hwmon/pmbus/pmbus_core.c
@@ -636,8 +636,10 @@ static long pmbus_reg2data_linear(struct pmbus_data *data,
 	long val;
 
 	if (sensor->class == PSC_VOLTAGE_OUT) {	/* LINEAR16 */
-		exponent = data->exponent[sensor->page];
-		mantissa = (u16) sensor->data;
+		//exponent = data->exponent[sensor->page];
+		//mantissa = (u16) sensor->data;
+                exponent = ((s16)sensor->data) >> 11;
+                mantissa = ((s16)((sensor->data & 0x7ff) << 5)) >> 5;
 	} else {				/* LINEAR11 */
 		exponent = ((s16)sensor->data) >> 11;
 		mantissa = ((s16)((sensor->data & 0x7ff) << 5)) >> 5;
@@ -2156,9 +2158,9 @@ static int pmbus_init_common(struct i2c_client *client, struct pmbus_data *data,
 	}
 
 	/* Enable PEC if the controller supports it */
-	ret = i2c_smbus_read_byte_data(client, PMBUS_CAPABILITY);
-	if (ret >= 0 && (ret & PB_CAPABILITY_ERROR_CHECK))
-		client->flags |= I2C_CLIENT_PEC;
+	//ret = i2c_smbus_read_byte_data(client, PMBUS_CAPABILITY);
+	//if (ret >= 0 && (ret & PB_CAPABILITY_ERROR_CHECK))
+	//	client->flags |= I2C_CLIENT_PEC;
 
 	if (data->info->pages)
 		pmbus_clear_faults(client);
-- 
2.7.4

